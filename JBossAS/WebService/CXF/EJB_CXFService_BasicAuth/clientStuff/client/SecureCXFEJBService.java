package client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.6
 * 2012-06-16T19:32:08.365+05:30
 * Generated source version: 2.4.6
 * 
 */
@WebServiceClient(name = "SecureCXF_EJBService", 
                  wsdlLocation = "service.wsdl",
                  targetNamespace = "http://ws/") 
public class SecureCXFEJBService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws/", "SecureCXF_EJBService");
    public final static QName SecureCXFEJBPort = new QName("http://ws/", "SecureCXF_EJBPort");
    static {
        URL url = SecureCXFEJBService.class.getResource("service.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(SecureCXFEJBService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "service.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public SecureCXFEJBService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SecureCXFEJBService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SecureCXFEJBService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns SecureCXFEJB
     */
    @WebEndpoint(name = "SecureCXF_EJBPort")
    public SecureCXFEJB getSecureCXFEJBPort() {
        return super.getPort(SecureCXFEJBPort, SecureCXFEJB.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SecureCXFEJB
     */
    @WebEndpoint(name = "SecureCXF_EJBPort")
    public SecureCXFEJB getSecureCXFEJBPort(WebServiceFeature... features) {
        return super.getPort(SecureCXFEJBPort, SecureCXFEJB.class, features);
    }

}
